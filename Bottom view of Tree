import java.util.*;

class Node {
    int data;
    Node left, right;

    Node(int item) {
        data = item;
        left = right = null;
    }
}

class BinaryTree {
    Node root;

    
    class Pair {
        Node node;
        int hd;

        Pair(Node n, int h) {
            node = n;
            hd = h;
        }
    }

    void bottomView() {
        if (root == null)
            return;

        
        Map<Integer, Integer> map = new TreeMap<>();

        Queue<Pair> queue = new LinkedList<>();
        queue.add(new Pair(root, 0)); 

        while (!queue.isEmpty()) {
            Pair p = queue.poll();
            Node curr = p.node;
            int hd = p.hd;

            
            map.put(hd, curr.data);

            if (curr.left != null)
                queue.add(new Pair(curr.left, hd - 1));
            if (curr.right != null)
                queue.add(new Pair(curr.right, hd + 1));
        }

        
        for (int val : map.values()) {
            System.out.print(val + " ");
        }
    }
}
public class Main{

    public static void main(String[] args) {
        BinaryTree tree = new BinaryTree();

        
        tree.root = new Node(20);
        tree.root.left = new Node(8);
        tree.root.right = new Node(22);
        tree.root.left.left = new Node(5);
        tree.root.left.right = new Node(3);
        tree.root.right.left = new Node(4);
        tree.root.right.right = new Node(25);
        tree.root.left.right.left = new Node(10);
        tree.root.left.right.right = new Node(14);

        System.out.println("Bottom View of the Binary Tree:");
        tree.bottomView(); 
    }
}
